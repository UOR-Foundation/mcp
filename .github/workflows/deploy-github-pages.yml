name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Prepare public files
        run: |
          # Copy static files
          mkdir -p dist/public
          cp -r public/* dist/public/
          
          # Create .nojekyll file to prevent GitHub Pages from ignoring files that begin with an underscore
          touch dist/public/.nojekyll
          
          # Create a custom 404 page that redirects to index.html
          cat > dist/public/404.html << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Redirecting...</title>
            <script>
              // Redirect to the home page with the path as a query parameter
              const path = window.location.pathname;
              window.location.href = '/?path=' + encodeURIComponent(path);
            </script>
          </head>
          <body>
            <p>Redirecting...</p>
          </body>
          </html>
          EOF
          
          # Set up deployment config for GitHub Pages
          cat > dist/public/deployment-config.js << EOF
          // Deployment-specific configuration for UOR MCP Server
          window.DEPLOYMENT_CONFIG = {
            githubUser: "${{ github.repository_owner }}",
            deployedAt: "$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          };

          // Apply the deployment configuration
          document.addEventListener('DOMContentLoaded', () => {
            const config = window.MCPConfig.getConfig();
            // Configuration is done through URL parameters
            window.MCPConfig.saveConfig(config);
          });
          EOF
          
          # Replace the client ID placeholder with the actual value
          sed -i "s/CLIENT_ID_PLACEHOLDER/${{ secrets.GITHUB_OAUTH_CLIENT_ID }}/g" dist/public/config.js
      
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v3
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'dist/public'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
